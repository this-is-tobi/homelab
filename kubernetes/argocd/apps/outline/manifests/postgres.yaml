apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: outline-pg-cluster-admin
  annotations:
    avp.kubernetes.io/remove-missing: "true"
data:
  username: <path:secret/data/admin/apps/outline#postgres | jsonPath {.admin.username} | base64encode>
  password: <path:secret/data/admin/apps/outline#postgres | jsonPath {.admin.password} | base64encode>

---
apiVersion: v1
kind: Secret
type: kubernetes.io/basic-auth
metadata:
  name: outline-pg-cluster-app
  annotations:
    avp.kubernetes.io/remove-missing: "true"
data:
  username: <path:secret/data/admin/apps/outline#postgres | jsonPath {.app.username} | base64encode>
  password: <path:secret/data/admin/apps/outline#postgres | jsonPath {.app.password} | base64encode>

---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: outline-pg-cluster-infos
  annotations:
    avp.kubernetes.io/remove-missing: "true"
data:
  host: <path:secret/data/admin/apps/outline#postgres | jsonPath {.host} | base64encode>
  port: <path:secret/data/admin/apps/outline#postgres | jsonPath {.port} | base64encode>
  database: <path:secret/data/admin/apps/outline#postgres | jsonPath {.database} | base64encode>
  username: <path:secret/data/admin/apps/outline#postgres | jsonPath {.app.username} | base64encode>
  password: <path:secret/data/admin/apps/outline#postgres | jsonPath {.app.password} | base64encode>

---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: outline-pg-cluster
spec:
  imageName: ghcr.io/cloudnative-pg/postgresql:15.4
  instances: 3
  primaryUpdateStrategy: unsupervised
  bootstrap:
    initdb:
      database: outline
      owner: outline
      secret:
        name: outline-pg-cluster-app
  superuserSecret:
    name: outline-pg-cluster-admin
  storage:
    size: 7Gi
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 2Gi
      cpu: 500m
  affinity:
    enablePodAntiAffinity: true
  monitoring:
    enablePodMonitor: true

# ---
# apiVersion: v1
# kind: Secret
# type: Opaque
# metadata:
#   name: outline-pg-cluster-backup
#   annotations:
#     avp.kubernetes.io/remove-missing: "true"
# data:
#   DB_HOST: <path:secret/data/admin/apps/outline#postgres | jsonPath {.host} | base64encode>
#   DB_PORT: <path:secret/data/admin/apps/outline#postgres | jsonPath {.port} | base64encode>
#   DB_NAME: <path:secret/data/admin/apps/outline#postgres | jsonPath {.database} | base64encode>
#   DB_USER: <path:secret/data/admin/apps/outline#postgres | jsonPath {.app.username} | base64encode>
#   DB_PASS: <path:secret/data/admin/apps/outline#postgres | jsonPath {.app.password} | base64encode>
#   S3_ENDPOINT: <path:secret/data/admin/apps/outline#postgres | jsonPath {.s3.endpoint} | base64encode>
#   S3_ACCESS_KEY: <path:secret/data/admin/apps/outline#postgres | jsonPath {.s3.accessKey} | base64encode>
#   S3_SECRET_KEY: <path:secret/data/admin/apps/outline#postgres | jsonPath {.s3.secretKey} | base64encode>
#   S3_BUCKET_NAME: <path:secret/data/admin/apps/outline#postgres | jsonPath {.s3.bucketName} | base64encode>
#   S3_BUCKET_PREFIX: <path:secret/data/admin/apps/outline#postgres | jsonPath {.s3.bucketPrefix} | base64encode>
#   RETENTION_DAYS: MzA=

# ---
# apiVersion: batch/v1
# kind: CronJob
# metadata:
#   name: outline-pg-cluster-backup
#   labels:
#     jobgroup: outline-pg-cluster-backup
# spec:
#   schedule: "0 1 * * *"
#   successfulJobsHistoryLimit: 1
#   failedJobsHistoryLimit: 3
#   concurrencyPolicy: Forbid
#   jobTemplate:
#     metadata:
#       name: outline-pg-cluster-backup
#       labels:
#         jobgroup: outline-pg-cluster-backup
#     spec:
#       backoffLimit: 0
#       template:
#         spec:
#           containers:
#           - name: outline-pg-cluster-backup
#             image: ghcr.io/this-is-tobi/tools/pg-backup:latest
#             imagePullPolicy: Always
#             envFrom:
#             - secretRef:
#                 name: outline-pg-cluster-backup
#           restartPolicy: Never
