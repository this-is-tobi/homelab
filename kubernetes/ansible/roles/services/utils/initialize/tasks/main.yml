# Get Vault infos
- block:
    - name: Retrieve vault keys
      kubernetes.core.k8s_info:
        namespace: "{{ vault.namespace }}"
        kind: Secret
        name: vault-admin
      register: vault_keys

    - name: Set vault token
      ansible.builtin.set_fact:
        vault_core_token: "{{ vault_keys.resources[0].data.rootToken | b64decode }}"
  when: vault_core_token is undefined

# Get Argocd infos
- block:
    - name: Retrieve argocd credentials
      kubernetes.core.k8s_info:
        namespace: "{{ argocd.namespace }}"
        kind: Secret
        name: argocd-admin
      register: argocd_secret

    - name: Get argocd api token
      ansible.builtin.uri:
        url: "https://{{ argocd.domain }}/api/v1/session"
        method: POST
        body_format: json
        body:
          "username": "{{ argocd_secret.resources[0].data.username | b64decode }}"
          "password": "{{ argocd_secret.resources[0].data.password | b64decode }}"
        status_code: 200
      register: argocd_token_call

    - name: Set argocd core token
      ansible.builtin.set_fact:
        argocd_core_token: "{{ argocd_token_call.json.token }}"
  when: argocd_core_token is undefined

# Create default secrets
- block:
    - name: Find apps secret files
      ansible.builtin.find:
        paths: "{{ playbook_dir }}/roles/services/additional"
        patterns: "vault-secrets.yml"
        recurse: true
      register: results

    - name: Check which services are enabled
      ansible.builtin.include_role:
        name: services/utils/check

    - name: Create default vault secrets
      ansible.builtin.include_tasks: "{{ vault_app }}"
      vars:
        argocd_app: "{{ vault_app }}"
      loop_control:
        loop_var: vault_app
      with_items: "{{ results.files | json_query('[].path') }}"
      when: (vault_app | regex_replace('.*(additional\/)(.*)(\/tasks).*', '\\2')) in enabled_services

  #   - name: Create default vault secrets
  #     ansible.builtin.include_tasks: "{{ vault_app }}"
  #     loop_control:
  #       loop_var: vault_app
  #     with_items: "{{ results.files | json_query('[].path') }}"
  when: init_vault_secret | default(false)

# Get Keycloak infos
- block:
    - name: Get keycloak vault secrets
      ansible.builtin.include_tasks: roles/services/utils/secrets/tasks/read.yml
      vars:
        argocd_app: keycloak

    - name: Set fact for keycloak vault secrets
      ansible.builtin.set_fact:
        keycloak_username: "{{ current_vault_values.secret.admin.username }}"
        keycloak_password: "{{ current_vault_values.secret.admin.password }}"
        keycloak_domain: "{{ current_vault_values.secret.domain }}"
        keycloak_realm: "{{ current_vault_values.secret.extras.realm }}"
  when: include_keycloak | default(false)

# Get Minio infos
- block:
    - name: Get minio vault secrets
      ansible.builtin.include_tasks: roles/services/utils/secrets/tasks/read.yml
      vars:
        argocd_app: minio

    - name: Set fact for minio vault secrets
      ansible.builtin.set_fact:
        minio_username: "{{ current_vault_values.secret.admin.username }}"
        minio_password: "{{ current_vault_values.secret.admin.password }}"
        minio_api_domain: "{{ current_vault_values.secret.domainApi }}"
  when: include_minio | default(false)

# Get Sonarqube infos
- block:
    - name: Get sonarqube vault secrets
      ansible.builtin.include_tasks: roles/services/utils/secrets/tasks/read.yml
      vars:
        argocd_app: sonarqube

    - name: Set fact for sonarqube vault secrets
      ansible.builtin.set_fact:
        sonarqube_username: "{{ current_vault_values.secret.admin.username }}"
        sonarqube_password: "{{ current_vault_values.secret.admin.password }}"
        sonarqube_domain: "{{ current_vault_values.secret.domain }}"
  when: include_sonarqube | default(false)

# Get Vault infos
- block:
    - name: Get vault vault secrets
      ansible.builtin.include_tasks: roles/services/utils/secrets/tasks/read.yml
      vars:
        argocd_app: vault

    - name: Set fact for vault vault secrets
      ansible.builtin.set_fact:
        vault_token: "{{ current_vault_values.secret.admin.token }}"
        vault_domain: "{{ current_vault_values.secret.domain }}"
  when: include_vault | default(false)

# Get Habror infos
- block:
    - name: Get harbor vault secrets
      ansible.builtin.include_tasks: roles/services/utils/secrets/tasks/read.yml
      vars:
        argocd_app: harbor

    - name: Set fact for harbor vault secrets
      ansible.builtin.set_fact:
        harbor_username: "{{ current_vault_values.secret.admin.username }}"
        harbor_password: "{{ current_vault_values.secret.admin.password }}"
        harbor_domain: "{{ current_vault_values.secret.domain }}"
  when: include_harbor | default(false)

# Refresh platform
- block:
    - name: Refresh platform
      ansible.builtin.include_tasks: refresh.yml
  when: refresh_platform | default(false)
