kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      scrapeConfigSelector:
        matchLabels: null
      ruleSelector:
        matchLabels: null
      probeSelector:
        matchLabels: null
      serviceMonitorSelector:
        matchLabels: null
      podMonitorSelector:
        matchLabels: null
      retention: 30d
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteMany"]
            resources:
              requests:
                storage: 100Gi
  grafana:
    assertNoLeakedSecrets: false
    adminPassword: ""
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-http-prod
      hosts:
      - ""
      tls:
      - hosts:
        - ""
        secretName: ""
    defaultDashboardsTimezone: Europe/Paris
    grafana.ini:
      server:
        root_url: ""
      auth.generic_oauth:
        enabled: true
        name: Keycloak
        allow_sign_up: true
        client_id: ""
        client_secret: ""
        scopes: openid email profile roles groups
        email_attribute_path: email
        login_attribute_path: username
        name_attribute_path: full_name
        auth_url: ""
        token_url: ""
        api_url: ""
        allow_assign_grafana_admin: true
        groups_attribute_path: groups
        role_attribute_path: contains(groups[*], 'admin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'
    persistence:
      enabled: true
      type: sts
      accessModes:
        - ReadWriteMany
      size: 3Gi
      finalizers:
        - kubernetes.io/pvc-protection
