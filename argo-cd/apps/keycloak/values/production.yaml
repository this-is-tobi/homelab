keycloak:
  replicaCount: 2
  auth:
    adminUser: <path:secret/data/platforms/production/apps/keycloak#admin | jsonPath {.username}>
    existingSecret: keycloak-admin
    passwordSecretKey: password
  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hostname: <path:secret/data/platforms/production/apps/keycloak#domain>
    path: /
    tls: true
    secrets: []
  production: true
  proxyHeaders: xforwarded
  tls:
    enabled: false
    autoGenerated: false
  postgresql:
    enabled: false
  externalDatabase:
    host: keycloak-pg-cluster-rw
    port: 5432
    database: keycloak
    existingSecret: keycloak-pg-cluster-infos
    existingSecretHostKey: host
    existingSecretPortKey: port
    existingSecretDatabaseKey: database
    existingSecretUserKey: username
    existingSecretPasswordKey: password
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true

cnpg:
  fullnameOverride: keycloak-pg-cluster
  imageName: ghcr.io/cloudnative-pg/postgresql:15.4
  dbName: keycloak
  username: keycloak
  password: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.app.password}>
  postgresPassword: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.admin.password}>
  mode: primary
  instances: 3
  enableSuperuserAccess: false
  pvcSize:
    data: 7Gi
    wal: 1Gi
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  backup:
    enabled: false
    endpointURL: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.endpoint}>
    destinationPath: s3://<path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.bucketName}>/<path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.bucketPrefix}>
    cron: 0 0 0 * * *
    retentionPolicy: 30d
    compression: gzip
    s3Credentials:
      create: true
      secretName: keycloak-pg-cluster-backup
      accessKeyId:
        key: accessKeyId
        value: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.accessKey}>
      secretAccessKey:
        key: secretAccessKey
        value: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.secretKey}>
      region:
        key: region
        value: <path:secret/data/platforms/production/apps/keycloak#postgres | jsonPath {.s3.region}>
