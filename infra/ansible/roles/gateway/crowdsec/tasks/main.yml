- block:
  - name: Install required system packages
    ansible.builtin.apt:
      name: "{{ item }}"
      state: present
      update_cache: true
    loop:
      - jq
      - nftables

  - name: Enable and check nftables service
    ansible.builtin.systemd:
      name: nftables
      state: started
      enabled: yes

  - name: Add crowdsec apt repository
    ansible.builtin.shell:
      cmd: curl -s https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.deb.sh | sudo bash

  - name: Install required system packages
    ansible.builtin.apt:
      name: "{{ item }}"
      state: present
      update_cache: true
    loop:
      - crowdsec
      - crowdsec-firewall-bouncer-nftables
      - crowdsec-haproxy-bouncer

  - name: Create crowdsec acquis directory
    ansible.builtin.file:
      path: /etc/crowdsec/acquis.d
      state: directory
      owner: root
      group: root

  - name: Copy crowdsec acquisition file
    ansible.builtin.template:
      src: "acquis/{{ item }}.yml.j2"
      dest: "/etc/crowdsec/acquis.d/{{ item }}.yml"
    with_items:
      - ssh
      - haproxy
      - wireguard

  - name: Install crowdsec collections
    ansible.builtin.shell:
      cmd: |
        sudo cscli collections install \
          crowdsecurity/sshd \
          crowdsecurity/base-http-scenarios \
          crowdsecurity/http-cve \
          crowdsecurity/haproxy \
          crowdsecurity/wireguard

  - name: Install crowdsec parsers
    ansible.builtin.shell:
      cmd: |
        sudo cscli parser install \
          crowdsecurity/docker-logs

  - name: Enable and start crowdsec service
    ansible.builtin.systemd:
      name: crowdsec
      state: restarted
      enabled: true

  - name: Register crowdsec nftables bouncer key
    ansible.builtin.shell:
      cmd: |
        NFTABLES_BOUNCER_KEY="$(sudo cscli bouncers list -o json \
          | jq -r '.[] | select(.name | contains("firewall-bouncer")) | .api_key')"
        if [ -z "$NFTABLES_BOUNCER_KEY" ]; then
          sudo cscli bouncers add crowdsec-firewall-bouncer-nftables | grep '^[[:space:]]' | tr -d '[:space:]'
        else
          echo "$NFTABLES_BOUNCER_KEY"
        fi
    no_log: true
    register: nftables_bouncer_key

  - name: Set crowdsec nftables bouncer key
    delegate_to: localhost
    become: false
    ansible.builtin.shell:
      cmd: |
        yq -i '.crowdsec.bouncerNftablesKey = "{{ nftables_bouncer_key.stdout }}"' ./inventory/group_vars/gateway.yml
    when: not crowdsec.bouncerNftablesKey == nftables_bouncer_key.stdout

  - name: Copy nftables bouncer config file
    ansible.builtin.template:
      src: "bouncers/crowdsec-firewall-bouncer.yml.j2"
      dest: "/etc/crowdsec/bouncers/crowdsec-firewall-bouncer.yml"

  - name: Enable and start nftables bouncer service
    ansible.builtin.systemd:
      name: crowdsec-firewall-bouncer
      state: restarted
      enabled: true

  - name: Register crowdsec haproxy bouncer key
    ansible.builtin.shell:
      cmd: |
        HAPROXY_BOUNCER_KEY="$(sudo cscli bouncers list -o json \
          | jq -r '.[] | select(.name | contains("haproxy")) | .api_key')"
        if [ -z "$HAPROXY_BOUNCER_KEY" ]; then
          sudo cscli bouncers add crowdsec-haproxy-bouncer | grep '^[[:space:]]' | tr -d '[:space:]'
        else
          echo "$HAPROXY_BOUNCER_KEY"
        fi
    no_log: true
    register: haproxy_bouncer_key

  - name: Set crowdsec haproxy bouncer key
    delegate_to: localhost
    become: false
    ansible.builtin.shell:
      cmd: |
        yq -i '.crowdsec.bouncerHaproxyKey = "{{ haproxy_bouncer_key.stdout }}"' ./inventory/group_vars/gateway.yml
    when: not crowdsec.bouncerHaproxyKey == haproxy_bouncer_key.stdout

  - name: Copy haproxy bouncer config file
    ansible.builtin.template:
      src: "bouncers/crowdsec-haproxy-bouncer.conf.j2"
      dest: "/etc/crowdsec/bouncers/crowdsec-haproxy-bouncer.conf"

  - name: Enable and start haproxy bouncer service
    ansible.builtin.systemd:
      name: crowdsec-firewall-bouncer
      state: restarted
      enabled: true
  when: crowdsec.enabled
