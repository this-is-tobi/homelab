apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus-stack
  namespace: argocd-system
  finalizers:
  - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "4"
spec:
  project: admin
  revisionHistoryLimit: 5
  sources:
  - chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 56.19.0
    helm:
      releaseName: prometheus-stack
      valuesObject:
        prometheus:
          prometheusSpec:
            podMonitorSelector: false
            serviceMonitorSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
            scrapeConfigSelectorNilUsesHelmValues: false
            retention: 30d
            storageSpec:
              volumeClaimTemplate:
                spec:
                  accessModes: ["ReadWriteMany"]
                  resources:
                    requests:
                      storage: 100Gi
        grafana:
          assertNoLeakedSecrets: false
          adminPassword: <path:secret/data/admin/apps/prometheus-stack#admin | jsonPath {.password}>
          ingress:
            enabled: true
            ingressClassName: traefik
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            hosts:
            - <path:secret/data/admin/apps/prometheus-stack#domain>
            tls:
            - hosts:
              - <path:secret/data/admin/apps/prometheus-stack#domain>
              secretName: <path:secret/data/admin/apps/prometheus-stack#domain>
          defaultDashboardsTimezone: Europe/Paris
          grafana.ini:
            server:
              root_url: https://<path:secret/data/admin/apps/prometheus-stack#domain>
            auth.generic_oauth:
              enabled: true
              name: Keycloak
              allow_sign_up: true
              client_id: <path:secret/data/admin/apps/prometheus-stack#keycloak | jsonPath {.clientId}>
              client_secret: <path:secret/data/admin/apps/prometheus-stack#keycloak | jsonPath {.clientSecret}>
              scopes: openid email profile roles groups
              email_attribute_path: email
              login_attribute_path: username
              name_attribute_path: full_name
              auth_url: https://<path:secret/data/admin/apps/keycloak#domain>/realms/<path:secret/data/admin/apps/keycloak#extras | jsonPath {.realm}>/protocol/openid-connect/auth
              token_url: https://<path:secret/data/admin/apps/keycloak#domain>/realms/<path:secret/data/admin/apps/keycloak#extras | jsonPath {.realm}>/protocol/openid-connect/token
              api_url: https://<path:secret/data/admin/apps/keycloak#domain>/realms/<path:secret/data/admin/apps/keycloak#extras | jsonPath {.realm}>/protocol/openid-connect/userinfo
              allow_assign_grafana_admin: true
              groups_attribute_path: groups
              role_attribute_path: contains(groups[*], 'admin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'grafanaadmin') && 'GrafanaAdmin' || contains(resource_access.grafana.roles[*], 'admin') && 'Admin' || contains(resource_access.grafana.roles[*], 'editor') && 'Editor' || 'Viewer'
          persistence:
            enabled: true
            type: sts
            accessModes:
              - ReadWriteMany
            size: 3Gi
            finalizers:
              - kubernetes.io/pvc-protection
  - path: argocd/apps/prometheus-stack/manifests
    repoURL: https://github.com/this-is-tobi/homelab.git
    targetRevision: main
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated: {}
    syncOptions:
    - CreateNamespace=true
    - ApplyOutOfSyncOnly=true
    - ServerSideApply=true
