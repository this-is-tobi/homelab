- name: Install required system packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
    update_cache: true
  loop:
    - ca-certificates
    - curl
    - gnupg
    - lsb-release

- name: Ensure keyrings directory exists
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker GPG key (as .asc)
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    force: true

- name: Map architectures
  ansible.builtin.set_fact:
    docker_arch_map:
      x86_64: amd64
      armv7l: armhf
      armhf: armhf
      aarch64: arm64
      arm64: arm64

- name: Set docker_arch
  ansible.builtin.set_fact:
    docker_arch: "{{ docker_arch_map.get(ansible_architecture, ansible_architecture) }}"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
    filename: docker
    state: present

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    
- name: Install Docker
  ansible.builtin.apt:
    name: "{{ item }}"
    state: latest
    update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Add user to the docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    state: present
    append: true
  no_log: true
  notify: reboot

- name: Enable and check docker service
  ansible.builtin.systemd:
    name: docker
    state: started
    enabled: true
