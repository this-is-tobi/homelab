# Setup
- name: Create namespace
  kubernetes.core.k8s:
    kind: Namespace
    name: "{{ argocd.namespace }}"

- name: Retrieve argocd admin secret
  kubernetes.core.k8s_info:
    namespace: "{{ argocd.namespace }}"
    kind: Secret
    name: argocd-admin
  register: argocd_admin_secret

- block:
    - name: Set argocd admin hashed password
      ansible.builtin.set_fact:
        argocd_password: "{{ lookup('ansible.builtin.password', '/dev/null', length=24, chars=['ascii_letters', 'digits']) | b64encode }}"

    - name: Hash argocd password
      ansible.builtin.shell:
        cmd: |
          htpasswd -nbBC 10 "" {{ argocd_password }} | tr -d ':\n' | sed 's/$2y/$2a/'
      register: hash_argocd_password

    - name: Set argocd admin hashed password
      ansible.builtin.set_fact:
        argocd_hashed_password: "{{ hash_argocd_password.stdout_lines[0] }}"

    - name: Deploy argocd admin secret
      kubernetes.core.k8s:
        template: "{{ item }}"
        state: present
      with_items:
        - secret-admin.yml.j2
  when: argocd_admin_secret.resources[0].data.password is undefined

- name: Retrieve argocd admin secret
  kubernetes.core.k8s_info:
    namespace: "{{ argocd.namespace }}"
    kind: Secret
    name: argocd-admin
  register: argocd_admin_secret

- name: Set argocd admin hashed password
  ansible.builtin.set_fact:
    argocd_password: "{{ argocd_admin_secret.resources[0].data.password | b64decode }}"
    argocd_hashed_password: "{{ argocd_admin_secret.resources[0].data.passwordHash | b64decode }}"

- name: Find vault keys
  kubernetes.core.k8s_info:
    namespace: "{{ vault.namespace }}"
    kind: Secret
    name: vault-admin
  register: vault_keys

- name: Set fact for vault secrets
  ansible.builtin.set_fact:
    vault_core_token: "{{ vault_keys.resources[0].data.rootToken | b64decode }}"

- name: Deploy argocd plugins config
  kubernetes.core.k8s:
    template: "{{ item }}"
    state: present
  with_items:
    - vault-plugin-cm.yml.j2
    - vault-plugin-secret.yml.j2

# Install
- name: Add helm repo
  kubernetes.core.helm_repository:
    name: "{{ argocd.helm.repoName }}"
    repo_url: "{{ argocd.helm.repoUrl }}"
    state: present

- name: Deploy helm chart
  kubernetes.core.helm:
    name: "{{ argocd.helm.chartName }}"
    update_repo_cache: true
    chart_ref: "{{ argocd.helm.repoName }}/{{ argocd.helm.chartName }}"
    chart_version: "{{ argocd.helm.chartVersion }}"
    create_namespace: true
    namespace: "{{ argocd.namespace }}"
    wait: true
    timeout: 10m0s
    state: present
    values: "{{ lookup('template', 'helm-values.yml.j2') | from_yaml }}"

# Post install
- name: Deploy argocd admin project
  kubernetes.core.k8s:
    template:
      path: "admin-project.yml.j2"
    state: present

- name: Deploy argocd admin application set
  kubernetes.core.k8s:
    template:
      path: "admin-application-set.yml.j2"
      variable_start_string: "[["
      variable_end_string: "]]"
    state: present
