configs:
  secret:
    argocdServerAdminPassword: {{ argocd_hashed_password }}
  params:
    server.insecure: true
  rbac:
    policy.csv: |
      p, role:none, *, *, */*, deny
      p, role:admin, *, *, */*, allow
      g, admin, role:admin
  policy.default: role:none
  scopes: "[groups]"
  cm:
    url: https://{{ argocd.domain }}
    resource.customizations: |
      networking.k8s.io/Ingress:
        health.lua: |
          hs = {}
          hs.status = "Healthy"
          return hs
redis-ha:
  enabled: true
redis:
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
notifications:
  replicas: 1
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
controller:
  replicas: 2
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
server:
  replicas: 2
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
  ingress:
    enabled: true
    ingressClassName: {{ ingressClassName }}
    hostname: {{ argocd.domain }}
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    tls: false
    extraTls:
    - hosts:
      - {{ argocd.domain }}
      secretName: {{ argocd.domain }}
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
applicationSet:
  enabled: true
  replicas: 2
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
dex:
  enabled: false
  nodeSelector:
    node-type: worker
repoServer:
  replicas: 2
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
  metrics:
    enabled: false
    serviceMonitor:
      enabled: true
  initContainers:
  - name: download-tools
    image: registry.access.redhat.com/ubi8
    env:
    - name: AVP_VERSION
      value: 1.17.0
    command: [sh, -c]
    args:
    - >-
      OS="$(uname | tr '[:upper:]' '[:lower:]')" && [ "$(uname -m)" = "aarch64" ] && ARCH="arm64" || ARCH="amd64" &&
      curl -L https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v$(AVP_VERSION)/argocd-vault-plugin_$(AVP_VERSION)_${OS}_${ARCH} -o argocd-vault-plugin &&
      chmod +x argocd-vault-plugin &&
      mv argocd-vault-plugin /custom-tools/
    volumeMounts:
    - mountPath: /custom-tools
      name: custom-tools
  extraContainers:
  - name: avp
    command: [/var/run/argocd/argocd-cmp-server]
    image: quay.io/argoproj/argocd:v2.10.4
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
    envFrom:
    - secretRef:
        name: vault-plugin-secret
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    # Register plugins into sidecar
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      subPath: avp.yaml
      name: cmp-plugin
    # Important: Mount tools into $PATH
    - name: custom-tools
      subPath: argocd-vault-plugin
      mountPath: /usr/local/bin/argocd-vault-plugin
  - name: avp-helm
    command: [/var/run/argocd/argocd-cmp-server]
    image: quay.io/argoproj/argocd:v2.10.4
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
    envFrom:
    - secretRef:
        name: vault-plugin-secret
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    # Register plugins into sidecar
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      subPath: avp-helm.yaml
      name: cmp-plugin
    # Important: Mount tools into $PATH
    - name: custom-tools
      subPath: argocd-vault-plugin
      mountPath: /usr/local/bin/argocd-vault-plugin
  - name: avp-kustomize
    command: [/var/run/argocd/argocd-cmp-server]
    image: quay.io/argoproj/argocd:v2.10.4
    securityContext:
      runAsNonRoot: true
      runAsUser: 999
    envFrom:
    - secretRef:
        name: vault-plugin-secret
    volumeMounts:
    - mountPath: /var/run/argocd
      name: var-files
    - mountPath: /home/argocd/cmp-server/plugins
      name: plugins
    - mountPath: /tmp
      name: tmp
    # Register plugins into sidecar
    - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      subPath: avp-kustomize.yaml
      name: cmp-plugin
    # Important: Mount tools into $PATH
    - name: custom-tools
      subPath: argocd-vault-plugin
      mountPath: /usr/local/bin/argocd-vault-plugin
  volumes:
  - configMap:
      name: cmp-plugin
    name: cmp-plugin
  - name: custom-tools
    emptyDir: {}
crds:
  install: true
  keep: true
