- name: Get vault secrets
  include_tasks: roles/services/utils/secrets/tasks/read.yml
  vars:
    argocd_app: keycloak

- name: Set fact for vault secrets
  ansible.builtin.set_fact:
    keycloak_username: "{{ current_vault_values.secret.admin.username }}"
    keycloak_password: "{{ current_vault_values.secret.admin.password }}"
    keycloak_domain: "{{ current_vault_values.secret.domain }}"
    keycloak_realm: "{{ current_vault_values.secret.extras.realm }}"

- name: Get vault secrets
  include_tasks: roles/services/utils/secrets/tasks/read.yml
  vars:
    argocd_app: minio

- name: Set fact for vault secrets
  ansible.builtin.set_fact:
    minio_domain: "{{ current_vault_values.secret.domain }}"
    minio_client_id: "{{ current_vault_values.secret.keycloak.clientId }}"

- name: Create minio client
  community.general.keycloak_client:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak_domain }}
    auth_realm: master
    auth_username: "{{ keycloak_username }}"
    auth_password: "{{ keycloak_password }}"
    realm: "{{ keycloak_realm }}"
    client_id: "{{ minio_client_id }}"
    name: "{{ minio_client_id }}"
    always_display_in_console: true
    frontchannel_logout: true
    enabled: true
    redirect_uris:
      - https://{{ minio_domain }}/*
    web_origins:
      - https://{{ minio_domain }}
    standard_flow_enabled: true
    implicit_flow_enabled: false
    direct_access_grants_enabled: true
    clientAuthenticatorType: client-secret
    public_client: false
    protocol: openid-connect
    default_client_scopes:
      - profile
      - email
      - groups
      - roles
    protocol_mappers:
      - name: minio-policy-mapper
        protocol: openid-connect
        protocolMapper: oidc-usermodel-client-role-mapper
        consentRequired: false
        config:
          id.token.claim: true
          access.token.claim: true
          claim.name: minio-policy
          userinfo.token.claim: true
          jsonType.label: String
          aggregate.attrs: true
          client_id: "{{ minio_client_id }}"
          multivalued: true
    attributes:
      use.jwks.url: true
      jwks.url: https://{{ keycloak_domain }}/realms/{{ keycloak_realm }}/protocol/openid-connect/certs
    state: present

- name: Create keycloak roles
  community.general.keycloak_role:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak_domain }}
    auth_realm: master
    auth_username: "{{ keycloak_username }}"
    auth_password: "{{ keycloak_password }}"
    name: "{{ item }}"
    realm: "{{ keycloak_realm }}"
    client_id: "{{ minio_client_id }}"
    description: Role for minio
    state: present
  loop:
    - consoleAdmin
    - diagnostics
    - readonly
    - readwrite
    - writeonly

- name: Map keycloak role to admin group
  community.general.keycloak_client_rolemapping:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak_domain }}
    auth_realm: master
    auth_username: "{{ keycloak_username }}"
    auth_password: "{{ keycloak_password }}"
    realm: "{{ keycloak_realm }}"
    client_id: "{{ minio_client_id }}"
    group_name: admin
    roles:
      - name: "{{ item }}"
    state: present
  loop:
    - consoleAdmin
    - diagnostics
    - readonly
    - readwrite
    - writeonly

- name: Get minio client secret
  community.general.keycloak_clientsecret_info:
    client_id: "{{ minio_client_id }}"
    realm: "{{ keycloak_realm }}"
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak_domain }}
    auth_realm: master
    auth_username: "{{ keycloak_username }}"
    auth_password: "{{ keycloak_password }}"
  register: minio_client_secret
  no_log: true

- name: Create vault secret
  ansible.builtin.include_role:
    name: services/utils/secrets
  vars:
    argocd_app: minio
    vault_values:
      keycloak:
        clientSecret: "{{ minio_client_secret.clientsecret_info.value }}"
