# Get vault secrets
- name: Get vault secrets
  ansible.builtin.include_tasks: roles/services/utils/secrets/tasks/read.yml
  vars:
    argocd_app: sonarqube

- name: Set fact for vault secrets
  ansible.builtin.set_fact:
    sonarqube_domain: "{{ current_vault_values.secret.domain }}"
    sonarqube_username: "{{ current_vault_values.secret.admin.username }}"
    sonarqube_password: "{{ current_vault_values.secret.admin.password }}"
    sonarqube_token: "{{ current_vault_values.secret.admin.token }}"
    sonarqube_client_id: "{{ current_vault_values.secret.keycloak.clientId }}"
    sonarqube_client_secret: "{{ current_vault_values.secret.keycloak.clientSecret }}"

- name: Get admin group
  ansible.builtin.uri:
    url: "https://{{ sonarqube_domain }}/api/user_groups/search?q=admin"
    method: GET
    user: "{{ sonarqube_username }}"
    password: "{{ sonarqube_password }}"
    force_basic_auth: true
  register: admin_group

- name: Create admin group
  ansible.builtin.uri:
    url: "https://{{ sonarqube_domain }}/api/user_groups/create?name=admin&description=admin"
    method: POST
    user: "{{ sonarqube_username }}"
    password: "{{ sonarqube_password }}"
    force_basic_auth: true
    status_code: [200,204]
  when: admin_group.json.groups | selectattr('name', 'equalto', 'admin') | list | length == 0

- name: Add admin permissions to admin group
  ansible.builtin.uri:
    url: "https://{{ sonarqube_domain }}/api/permissions/add_group?groupName=admin&permission={{ item }}"
    method: POST
    user: "{{ sonarqube_username }}"
    password: "{{ sonarqube_password }}"
    force_basic_auth: true
    status_code: [200,204]
  with_items:
    - admin
    - gateadmin
    - profileadmin
    - profileadmin
    - provisioning
    - scan
