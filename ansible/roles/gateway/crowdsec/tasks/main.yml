- name: Install required system packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - jq
    - nftables

- name: Enable and check nftables service
  ansible.builtin.systemd:
    name: nftables
    state: started
    enabled: yes

- name: Add crowdsec apt repository
  ansible.builtin.shell:
    cmd: curl -s https://packagecloud.io/install/repositories/crowdsec/crowdsec/script.deb.sh | sudo bash

# - name: Add an apt signing key
#   ansible.builtin.apt_key:
#     url: https://packagecloud.io/crowdsec/crowdsec/gpgkey

# - name: Add apt repo
#   ansible.builtin.apt_repository:
#     repo: deb https://packagecloud.io/crowdsec/crowdsec/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} main
#     update_cache: true

- name: Install required system packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - crowdsec
    - crowdsec-firewall-bouncer-nftables
    - crowdsec-haproxy-bouncer

- name: Copy crowdsec acquisition file
  ansible.builtin.template:
    src: "acquis.yml.j2"
    dest: "/etc/crowdsec/acquis.yml"

- name: Register crowdsec bouncer key
  ansible.builtin.shell:
    cmd: |
      NFTABLES_BOUNCER_KEY="$(sudo cscli bouncers list -o json \
        | jq -r '.[] | select(.name | contains("firewall-bouncer")) | .api_key')"
      if [ -z "$NFTABLES_BOUNCER_KEY" ]; then
        sudo cscli bouncers add crowdsec-firewall-bouncer-nftables | grep '^[[:space:]]' | tr -d '[:space:]'
      else
        echo "$NFTABLES_BOUNCER_KEY"
      fi
  no_log: true
  register: nftables_bouncer_key

- name: Set crowdsec nftables bouncer key
  delegate_to: localhost
  become: false
  ansible.builtin.shell:
    cmd: |
      yq -i '.crowdsec.bouncerNftablesKey = "{{ nftables_bouncer_key.stdout }}"' ./inventory/group_vars/gateway.yml
  when: not crowdsec.bouncerNftablesKey == nftables_bouncer_key.stdout

- name: Copy nftables bouncer config file
  ansible.builtin.template:
    src: "crowdsec-firewall-bouncer.yml.j2"
    dest: "/etc/crowdsec/bouncers/crowdsec-firewall-bouncer.yml"

- name: Enable and start nftables bouncer service
  ansible.builtin.systemd:
    name: crowdsec-firewall-bouncer
    state: restarted
    enabled: true

- name: Register crowdsec bouncer key
  ansible.builtin.shell:
    cmd: |
      HAPROXY_BOUNCER_KEY="$(sudo cscli bouncers list -o json \
        | jq -r '.[] | select(.name | contains("haproxy")) | .api_key')"
      if [ -z "$HAPROXY_BOUNCER_KEY" ]; then
        sudo cscli bouncers add crowdsec-haproxy-bouncer | grep '^[[:space:]]' | tr -d '[:space:]'
      else
        echo "$HAPROXY_BOUNCER_KEY"
      fi
  no_log: true
  register: haproxy_bouncer_key

- name: Set crowdsec haproxy bouncer key
  delegate_to: localhost
  become: false
  ansible.builtin.shell:
    cmd: |
      yq -i '.crowdsec.bouncerHaproxyKey = "{{ haproxy_bouncer_key.stdout }}"' ./inventory/group_vars/gateway.yml
  when: not crowdsec.bouncerHaproxyKey == haproxy_bouncer_key.stdout

- name: Copy haproxy bouncer config file
  ansible.builtin.template:
    src: "crowdsec-haproxy-bouncer.conf.j2"
    dest: "/etc/crowdsec/bouncers/crowdsec-haproxy-bouncer.conf"

- name: Enable and start haproxy bouncer service
  ansible.builtin.systemd:
    name: crowdsec-firewall-bouncer
    state: restarted
    enabled: true
