---
- name: Install required system packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - python3-pip
    - jq

- name: Add required python packages
  ansible.builtin.pip:
    name:
      - docker-compose
    executable: pip3

- name: Apt update and install nftables
  ansible.builtin.apt:
    update_cache: true
    name: nftables
    state: present

- name: Enable and check nftables service
  ansible.builtin.systemd:
    name: nftables
    state: started
    enabled: yes

- name: Add an apt signing key
  ansible.builtin.apt_key:
    url: https://packagecloud.io/crowdsec/crowdsec/gpgkey

- name: Add apt repo
  ansible.builtin.apt_repository:
    repo: deb https://packagecloud.io/crowdsec/crowdsec/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} main
    update_cache: true

- name: Crowdsec install nftables bouncer
  ansible.builtin.apt:
    update_cache: true
    name: crowdsec-firewall-bouncer-nftables
    state: present

- name: Restart docker
  ansible.builtin.service:
    name: docker
    state: restarted

- name: Create crowdsec service dir
  ansible.builtin.file:
    path: "/services/crowdsec"
    state: directory
    owner: root
    group: "{{ ansible_user }}"
    mode: 0775

- name: Copy crowdsec acquisition file
  ansible.builtin.template:
    src: "acquis.yml.j2"
    dest: "/services/crowdsec/acquis.yml"

- name: Create crowdsec dashboard dir
  ansible.builtin.file:
    path: "/services/crowdsec/dashboard"
    state: directory

- name: Copy crowdsec dashboard Dockerfile
  ansible.builtin.template:
    src: "Dockerfile.j2"
    dest: "/services/crowdsec/dashboard/Dockerfile"

- name: Copy docker-compose file
  ansible.builtin.template:
    src: "docker-compose.yml.j2"
    dest: "/services/crowdsec/docker-compose.yml"

- name: Launch crowdsec
  community.docker.docker_compose:
    state: present
    project_src: "/services/crowdsec"
    files: 
      - "docker-compose.yml"

- name: Register crowdsec bouncer key
  ansible.builtin.shell:
    cmd: |
      NFTABLES_BOUNCER_KEY="$(docker exec crowdsec cscli bouncers list -o json \
        | jq -r '.[] | select(.name == "crowdsec-firewall-bouncer-nftables") | .api_key')"
      if [ -z "$NFTABLES_BOUNCER_KEY" ]; then
        docker exec crowdsec cscli bouncers add crowdsec-firewall-bouncer-nftables | grep '^[[:space:]]' | tr -d '[:space:]'
      else
        echo "$NFTABLES_BOUNCER_KEY"
      fi
    chdir: "/services/crowdsec"
  no_log: true
  register: bouncer_key

- name: Get infos on crowdsec container
  community.general.docker_container_info:
    name: crowdsec
  register: crowdsec_container

- name: Register crowdsec container ip
  ansible.builtin.set_fact:
    crowdsec_ip: "{{ crowdsec_container.container['NetworkSettings']['Networks']['crowdsec_homelab']['IPAddress'] }}"

- name: Copy bouncer config file
  ansible.builtin.template:
    src: "crowdsec-firewall-bouncer.yal.j2"
    dest: "/etc/crowdsec/bouncers/crowdsec-firewall-bouncer.yml"

- name: Enable and start bouncer service
  ansible.builtin.systemd:
    name: crowdsec-firewall-bouncer
    state: started
    enabled: true
