#!/bin/bash

# Colorize terminal
red='\e[0;31m'
no_color='\033[0m'
# Console step increment
i=1


# Declare script helper
print_help() {
  printf "
This script aims to manage openvpn.
Following flags are available:

  -a    Add given user.

  -d    Delete given user.

  -g    Get given user conf.

  -i    Init openvpn server.

  -h    Print script help.\n\n"
}


init () {
  printf "\n${red}${i}.${no_color} Initialize the configuration files and certificates\n"
  i=$(($i + 1))
  
  docker compose run --rm openvpn ovpn_genconfig -u udp://{{ openvpn_server_hostname }}
  docker compose run --rm openvpn ovpn_initpki


  printf "\n${red}${i}.${no_color} Start OpenVPN server process\n"
  i=$(($i + 1))

  docker compose up -d
}


add () {
  printf "\n${red}${i}.${no_color} Generate a client certificate\n"
  i=$(($i + 1))

  # with a passphrase (recommended)
  # docker compose run --rm openvpn easyrsa build-client-full $CLIENT_NAME

  # without a passphrase (not recommended)
  docker compose run --rm openvpn easyrsa build-client-full $CLIENT_NAME nopass
}


get () {
  printf "\n${red}${i}.${no_color} Retrieve the client configuration with embedded certificates\n"
  i=$(($i + 1))

  mkdir -p ./users
  docker compose run --rm openvpn ovpn_getclient $CLIENT_NAME > ./users/$CLIENT_NAME.ovpn
}


delete () {
  printf "\n${red}${i}.${no_color} Revoke a client certificate\n"
  i=$(($i + 1))

  # Keep the corresponding crt, key and req files.
  docker compose run --rm openvpn ovpn_revokeclient $CLIENT_NAME

  # # Remove the corresponding crt, key and req files.
  # docker compose run --rm openvpn ovpn_revokeclient $CLIENT_NAME remove
}


# Parse options
while getopts :ha:d:g:i flag
do
  case "${flag}" in
    a)
      CLIENT_NAME="${OPTARG}"
      add
      exit 0;;
    d)
      CLIENT_NAME="${OPTARG}"
      delete
      exit 0;;
    g)
      CLIENT_NAME="${OPTARG}"
      get
      exit 0;;
    i)
      init
      exit 0;;
    h | *)
      print_help
      exit 0;;
  esac
done
