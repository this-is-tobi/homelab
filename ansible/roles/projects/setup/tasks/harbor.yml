# Project
- name: Set harbor project fact
  ansible.builtin.set_fact:
    harbor_project:
      project_name: "{{ item.name }}"
      metadata:
        public: "{{ item.harbor.public }}"
        storage_limit: "{{ item.harbor.quota }}"
        auto_scan: "true"
      membership:
        role_id: 1
        member_group:
          id: 0
          group_name: "{{ item.name }}"
          group_type: 0
      robot:
        name: "{{ item.name }}"
        description: "{{ item.name }} project robot"
        level: system
        duration: -1
        permissions:
          - kind: project
            namespace: "{{ item.name }}"
            access:
              - action: list
                resource: repository
              - action: pull
                resource: repository
              - action: push
                resource: repository
              - action: delete
                resource: repository
              - action: read
                resource: artifact
              - action: list
                resource: artifact
              - action: delete
                resource: artifact
              - action: create
                resource: artifact-label
              - action: delete
                resource: artifact-label
              - action: create
                resource: tag
              - action: delete
                resource: tag
              - action: list
                resource: tag
              - action: create
                resource: scan
              - action: stop
                resource: scan

- name: Get project
  ansible.builtin.uri:
    url: https://{{ harbor.domain }}/api/v2.0/projects/{{ harbor_project.projectName }}
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    status_code: [200, 404]
  register: get_harbor_project

- name: Create project
  ansible.builtin.uri:
    method: POST
    url: https://{{ harbor.domain }}/api/v2.0/projects
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    body: "{{ harbor_project | to_json }}"
    status_code: [201]
  when: get_harbor_project.status == 404

- name: Update project
  ansible.builtin.uri:
    method: PUT
    url: https://{{ harbor.domain }}/api/v2.0/projects/{{ get_harbor_project.json.project_id }}
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    body: "{{ harbor_project | to_json }}"
    status_code: [200]
  when: get_harbor_project.status == 200

# Quotas
- name: Set project quota config
  ansible.builtin.set_fact:
    quota_config: |
      { 
        "hard": { 
          "storage": {{ harbor_project.metadata.storageLimit | human_to_bytes | int }} 
        } 
      }
  when: harbor_project.metadata.storageLimit != -1

- name: Set project quota config
  ansible.builtin.set_fact:
    quota_config: |
      { 
        "hard": { 
          "storage": {{ harbor_project.metadata.storageLimit | int }} 
        } 
      }
  when: harbor_project.metadata.storageLimit == -1

- name: Get project quota
  ansible.builtin.uri:
    method: GET
    url: https://{{ harbor.domain }}/api/v2.0/quotas/?reference_id={{ get_harbor_project.json.project_id }}
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    status_code: [200]
  register: harbor_project_quota
  when: get_harbor_project.status == 200

- name: Update project quotas
  ansible.builtin.uri:
    method: PUT
    url: https://{{ harbor.domain }}/api/v2.0/quotas/{{ get_harbor_project_quota.json[0].id }}
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    body: "{{ quota_config }}"
    status_code: [200]
  when: get_harbor_project_quota.status == 200

# Membership
- name: Get memberships
  ansible.builtin.uri:
    url: https://{{ harbor.domain }}/api/v2.0/projects/{{ harbor_project.projectName }}/members
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    status_code: [200, 404]
  register: get_harbor_memberships

- name: Find proper membership
  ansible.builtin.set_fact:
    harbor_membership_id: "{{ get_harbor_memberships.json | json_query('[? entity_name==`{{ harbor_project.projectName }}`].{entity_id: entity_id}') }}"

- name: Create project membership
  ansible.builtin.uri:
    method: POST
    url: https://{{ harbor.domain }}/api/v2.0/projects/{{ harbor_project.projectName }}/members
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    body: "{{ harbor_project.membership | to_json }}"
    status_code: [201, 409]
  when: harbor_membership_id | length == 0

- name: Update project membership
  ansible.builtin.uri:
    method: PUT
    url: https://{{ harbor.domain }}/api/v2.0/projects/{{ harbor_project.projectName }}/members/{{ harbor_membership_id }}
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    body: "{{ harbor_project.membership | to_json }}"
    status_code: [200]
  when: harbor_membership_id | length > 0

# Robot
- name: Get robots
  ansible.builtin.uri:
    url: https://{{ harbor.domain }}/api/v2.0/robots?name={{ harbor_project.project_name }}
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    status_code: [200, 404]
  register: get_harbor_robot

- name: Create robot
  ansible.builtin.uri:
    method: POST
    url: https://{{ harbor.domain }}/api/v2.0/robots
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    body: "{{ harbor_project.robot | to_json }}"
    status_code: [201]
  when: get_harbor_robot.json is defined and get_harbor_robot.json | length == 0

- name: Update robot
  ansible.builtin.uri:
    method: PUT
    url: https://{{ harbor.domain }}/api/v2.0/robots/{{ get_harbor_robot.json[0].id }}
    password: "{{ harbor.password }}"
    user: "{{ harbor.username }}"
    force_basic_auth: true
    body_format: json
    body: "{{ get_harbor_robot.json | ansible.builtin.combine(harbor_project.robot | ansible.utils.remove_keys(target=['name', 'level'])) | to_json }}"
    status_code: [200]
  when: get_harbor_robot.json is defined and get_harbor_robot.json | length > 0
