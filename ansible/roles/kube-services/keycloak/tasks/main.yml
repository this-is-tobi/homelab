---
- name: Generate keycloak random admin password
  ansible.builtin.shell:
    cmd: |
      yq -i '.keycloak.password = "{{ lookup('ansible.builtin.password', '/dev/null', length=32, chars=['ascii_letters', 'digits']) }}"' inventory/group_vars/cluster.yml
  no_log: true
  when: keycloak.password == ""

- name: Add bitnami helm repo
  kubernetes.core.helm_repository:
    name: "{{ keycloak.helm.repoName }}"
    repo_url: "{{ keycloak.helm.repoUrl }}"
    state: present

- name: Deploy keycloak helm chart
  kubernetes.core.helm:
    name: keycloak
    update_repo_cache: true
    chart_ref: "{{ keycloak.helm.chartRef }}"
    chart_version: "{{ keycloak.helm.chartVersion }}"
    create_namespace: true
    namespace: "{{ keycloak.namespace }}"
    wait: true
    timeout: 10m0s
    state: present
    values: "{{ lookup('template', 'helm-values.yml.j2') | from_yaml }}"

- name: Create keycloak realm
  community.general.keycloak_realm:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak.domain }}
    auth_realm: master
    auth_username: "{{ keycloak.username }}"
    auth_password: "{{ keycloak.password }}"
    id: "{{ keycloak.realm }}"
    realm: "{{ keycloak.realm }}"
    enabled: true
    registration_allowed: false
    registration_email_as_username: true
    reset_password_allowed: false
    user_managed_access_allowed: false
    verify_email: false
    brute_force_protected: true
    display_name: Homelab
    duplicate_emails_allowed: false
    edit_username_allowed: true
    access_token_lifespan: 3600
    state: present

- name: Create keycloak admin group
  community.general.keycloak_group:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak.domain }}
    auth_realm: master
    auth_username: "{{ keycloak.username }}"
    auth_password: "{{ keycloak.password }}"
    realm: "{{ keycloak.realm }}"
    name: "{{ item }}"
    state: present
  loop:
    - admin

- name: Create keycloak client scope for groups
  community.general.keycloak_clientscope:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak.domain }}
    auth_realm: master
    auth_username: "{{ keycloak.username }}"
    auth_password: "{{ keycloak.password }}"
    name: groups
    realm: "{{ keycloak.realm }}"
    description: Get user's groups
    protocol: openid-connect
    protocol_mappers:
      - name: groups
        protocol: openid-connect
        protocolMapper: oidc-group-membership-mapper
        config:
          full.path: false
          id.token.claim: true
          access.token.claim: true
          claim.name: groups
          userinfo.token.claim: true

- name: Create generic keycloak client scope 
  community.general.keycloak_clientscope:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak.domain }}
    auth_realm: master
    auth_username: "{{ keycloak.username }}"
    auth_password: "{{ keycloak.password }}"
    name: generic
    realm: "{{ keycloak.realm }}"
    description: Generic client scope
    protocol: openid-connect
    attributes:
      include.in.token.scope: true
      display.on.consent.screen: true
    protocolMappers:
      - name: family name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: true
          user.attribute: lastName
          id.token.claim: true
          access.token.claim: true
          claim.name: family_name
          jsonType.label: String
      - name: given name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: true
          user.attribute: firstName
          id.token.claim: true
          access.token.claim: true
          claim.name: given_name
          jsonType.label: String
      - name: name
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: true
          access.token.claim: true
          userinfo.token.claim: true
      - name: phone number
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        config:
          userinfo.token.claim: true
          user.attribute: phoneNumber
          id.token.claim: true
          access.token.claim: true
          claim.name: phone_number
          jsonType.label: String
      - name: acr loa level
        protocol: openid-connect
        protocolMapper: oidc-acr-mapper
        config:
          id.token.claim: true
          access.token.claim: true
      - name: nickname
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        config:
          userinfo.token.claim: true
          user.attribute: nickname
          id.token.claim: true
          access.token.claim: true
          claim.name: nickname
          jsonType.label: String
      - name: username
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: true
          user.attribute: username
          id.token.claim: true
          access.token.claim: true
          claim.name: preferred_username
          jsonType.label: String
      - name: full name
        protocol: openid-connect
        protocolMapper: oidc-full-name-mapper
        config:
          id.token.claim: true
          access.token.claim: true
          userinfo.token.claim: true
      - name: locale
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        config:
          userinfo.token.claim: true
          user.attribute: locale
          id.token.claim: true
          access.token.claim: true
          claim.name: locale
          jsonType.label: String
      - name: email verified
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: true
          user.attribute: emailVerified
          id.token.claim: true
          access.token.claim: true
          claim.name: email_verified
          jsonType.label: boolean
      - name: updated at
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        config:
          userinfo.token.claim: true
          user.attribute: updatedAt
          id.token.claim: true
          access.token.claim: true
          claim.name: updated_at
          jsonType.label: long
      - name: middle name
        protocol: openid-connect
        protocolMapper: oidc-usermodel-attribute-mapper
        config:
          userinfo.token.claim: true
          user.attribute: middleName
          id.token.claim: true
          access.token.claim: true
          claim.name: middle_name
          jsonType.label: String
      - name: groups
        protocol: openid-connect
        protocolMapper: oidc-group-membership-mapper
        config:
          full.path: false
          id.token.claim: true
          access.token.claim: true
          claim.name: groups
          userinfo.token.claim: true
      - name: email
        protocol: openid-connect
        protocolMapper: oidc-usermodel-property-mapper
        config:
          userinfo.token.claim: true
          user.attribute: email
          id.token.claim: true
          access.token.claim: true
          claim.name: email
          jsonType.label: String

- name: Create harbor config
  include_tasks: harbor.yml

- name: Create minio config
  include_tasks: minio.yml

- name: Create argocd config
  include_tasks: argocd.yml

- name: Create grafana config
  include_tasks: grafana.yml

- name: Create vault config
  include_tasks: vault.yml
