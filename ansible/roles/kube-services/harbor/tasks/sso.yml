- name: Create keycloak client
  community.general.keycloak_client:
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak.domain }}
    auth_realm: master
    auth_username: "{{ keycloak.username }}"
    auth_password: "{{ keycloak.password }}"
    realm: "{{ keycloak.realm }}"
    client_id: "{{ harbor.keycloak.clientId }}"
    name: "{{ harbor.keycloak.clientId }}"
    always_display_in_console: true
    frontchannel_logout: true
    enabled: true
    redirect_uris:
      - https://{{ harbor.domain }}/*
    web_origins:
      - https://{{ harbor.domain }}
    standard_flow_enabled: true
    implicit_flow_enabled: false
    direct_access_grants_enabled: true
    clientAuthenticatorType: client-secret
    public_client: false
    protocol: openid-connect
    attributes:
      include.in.token.scope: true
      display.on.consent.screen: true
    default_client_scopes:
      - profile
      - email
      - groups
      - roles
    state: present

- name: Get keycloak client secret
  community.general.keycloak_clientsecret_info:
    client_id: "{{ harbor.keycloak.clientId }}"
    realm: "{{ keycloak.realm }}"
    auth_client_id: admin-cli
    auth_keycloak_url: https://{{ keycloak.domain }}
    auth_realm: master
    auth_username: "{{ keycloak.username }}"
    auth_password: "{{ keycloak.password }}"
  register: harbor_client_secret
  no_log: true

- name: Set keycloak client secret
  ansible.builtin.shell:
    cmd: |
      yq -i '.harbor.keycloak.clientSecret = "{{ harbor_client_secret.clientsecret_info.value }}"' ../inventory/group_vars/kube-services/harbor.yml
  when: not harbor.keycloak.clientSecret == "{{ harbor_client_secret.clientsecret_info.value }}"
