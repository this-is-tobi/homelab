# Get vault secrets
- name: Get vault secrets
  ansible.builtin.include_tasks: roles/services/utils/secrets/tasks/read.yml
  vars:
    argocd_app: outline

- name: Set fact for vault secrets
  ansible.builtin.set_fact:
    outline_s3_access_key: "{{ current_vault_values.secret.s3.accessKey }}"
    outline_s3_secret_key: "{{ current_vault_values.secret.s3.secretKey }}"
    outline_s3_bucket_name: "{{ current_vault_values.secret.s3.bucketName }}"

- name: Set minio alias fact
  ansible.builtin.shell:
    cmd: |
      mc alias ls --json | jq -r 'select(.URL == "https://{{ minio_api_domain }}").alias'
  register: mc_alias

- name: Failed because of unknown s3 endpoint
  ansible.builtin.fail:
    msg: "Current s3 endpoint is not registered in your minio config, please set the alias with the command 'mc alias set homelab https://{{ minio_api_domain }}'"
  when: mc_alias.stdout == ""

- name: Create minio bucket
  amazon.aws.s3_bucket:
    name: "{{ outline_s3_bucket_name }}"
    endpoint_url: "https://{{ minio_api_domain }}"
    aws_access_key: "{{ minio_username }}"
    aws_secret_key: "{{ minio_password }}"
    state: present

- name: Create minio user
  ansible.builtin.shell:
    cmd: |
      mc admin user add "{{ mc_alias.stdout }}" \
        "{{ outline_s3_access_key }}" \
        "{{ outline_s3_secret_key }}"

- name: Create minio policy
  ansible.builtin.shell:
    cmd: |
      mc admin policy create "{{ mc_alias.stdout }}" \
        "{{ outline_s3_access_key }}" \
        "{{ playbook_dir }}/roles/services/additional/outline/templates/minio-policy.json"

- name: Get policy users
  ansible.builtin.shell:
    cmd: |
      mc admin policy entities "{{ mc_alias.stdout }}/{{ outline_s3_bucket_name }}" \
        --user "{{ outline_s3_access_key }}" \
        --json \
        | jq --arg u "{{ outline_s3_access_key }}" '.result.userMappings[] | select(.user == $u)'
  register: policy_users

- name: Attach policy to user
  ansible.builtin.shell:
    cmd: |
      mc admin policy attach "{{ mc_alias.stdout }}" \
        "{{ outline_s3_access_key }}" \
        --user "{{ outline_s3_access_key }}"
  when: policy_users.stdout == ''

- name: Attach public read policy
  ansible.builtin.shell:
    cmd: |
      mc anonymousset "{{ mc_alias.stdout }}/{{ outline_s3_bucket_name }}"

- name: Create minio quota
  ansible.builtin.shell:
    cmd: |
      mc quota set {{ mc_alias.stdout }}/{{ outline_s3_bucket_name }} \
        --size 10gi
