- name: Get platform env configs
  ansible.builtin.command: jq -c '.' "{{ item }}"
  register: platform_env_confs_raw
  loop: "{{ query('fileglob', '{{ playbook_dir }}/../../argo-cd/envs/*.json') | sort }}"

- name: Check if there is multiple envs
  vars:
    raw_envs: "{{ platform_env_confs_raw.results | map(attribute='stdout') | join(',') }}"
  assert:
    that:
    - raw_envs is not string and raw_envs is not mapping and raw_envs is iterable
  register: env_type
  ignore_errors: True

- name: Set platform env configs
  ansible.builtin.set_fact:
    platform_env_confs: "{{ platform_env_confs_raw.results | map(attribute='stdout') | join(',') }}"
  when: not env_type.failed

- name: Set platform env configs
  ansible.builtin.set_fact:
    platform_env_confs:
      - "{{ platform_env_confs_raw.results | map(attribute='stdout') | join(',') }}"
  when: env_type.failed

- name: Install and configure services
  ansible.builtin.include_tasks: configure.yml
  loop: "{{ platform_env_confs }}"
  loop_control:
    loop_var: platform_env_conf
