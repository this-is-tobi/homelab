---
#---------#
# cluster #
#---------#
# k3s version
k3sVersion: v1.28.2+k3s1
# k3s_token is required for masters to talk together securely this token should be alpha numeric only
k3sToken: ""
# k3s CA data
k3sCaData: ""
# systemd directory
k3sSystemdDir: /etc/systemd/system
# interface which will be used for flannel
k3sFlanneliface: eth0
# apiServerEndpoint is haproxy loadbalancer ip-address which will be configured on each master
k3sApiServerEndpoint: "{{ hostvars[groups['gateway'][0]]['ansible_host'] }}"
# master node ip address
k3sMasterIP: "{{ hostvars[groups['masters'][0]]['ansible_host'] }}"
# node ip address
k3sNodeIP: "{{ ansible_facts['eth0']['ipv4']['address'] }}"
# extra args to pass to both master and worker nodes
k3sExtraArgs: >-
  --node-name {{ inventory_hostname }}
  --node-ip={{ k3sNodeIP }}
  --prefer-bundled-bin
  --flannel-iface {{ k3sFlanneliface }}
# extra args to pass to master nodes
k3sExtraServerArgs: >-
  {{ k3sExtraArgs }}
  --tls-san {{ hostvars[groups['gateway'][0]]['ansible_host'] }}
  --disable local-storage
  --write-kubeconfig-mode 644
  --node-label node-type=master
# extra args to pass to worker nodes
k3sExtraAgentArgs: >-
  {{ k3sExtraArgs }}
  --node-label node-type=worker
# extra args to pass if longhorn need to create disk (cf. inventory hosts)
k3sExtraStorageArgs: ""
#----------#
# services #
#----------#
actionsRunnerController:
  helm:
    repoUrl: https://actions-runner-controller.github.io/actions-runner-controller
    repoName: actions-runner-controller
    chartRef: actions-runner-controller/actions-runner-controller
    chartVersion: 0.23.5
  namespace: actions-runner-system
  # Use 'githubToken' OR 'githubApp...'
  githubToken: ""
  # githubAppId: ""
  # githubAppInstallId: ""
  # githubAppKey: ""
  runners:
    # - name: docs-runner
    #   namespace: runners-docs
    #   type: repository
    #   target: this-is-tobi/docs
    #   minRunners: 1
    #   maxRunners: 5
    # - name: tobi-runner
    #   namespace: runners-tobi
    #   type: organization
    #   target: this-is-tobi
    #   minRunners: 1
    #   maxRunners: 5
argocd:
  helm:
    repoUrl: https://charts.bitnami.com/bitnami
    repoName: bitnami
    chartRef: bitnami/argo-cd
    chartVersion: 4.7.23
  namespace: argocd
  # argocd domain used as ingress
  domain: gitops.{{ rootDomain }}
  # argocd admin username
  username: admin
  # argocd admin password
  password: ""
certManager:
  helm:
    repoUrl: https://charts.jetstack.io
    repoName: jetstack
    chartRef: jetstack/cert-manager
    chartVersion: 1.12.3
  namespace: cert-manager
  # email used for letsencrypt
  email: your@email.com
cloudNativePostgres:
  helm:
    repoUrl: https://cloudnative-pg.github.io/charts
    repoName: cnpg
    chartRef: cnpg/cloudnative-pg
    chartVersion: 0.18.2
  namespace: cnpg-system
dashy:
  namespace: dashy
  image: docker.io/lissy93/dashy:2.1.1
  docsDomain: docs.this-is-tobi.com
grafana:
  helm:
    repoUrl: https://charts.bitnami.com/bitnami
    repoName: bitnami
    chartRef: bitnami/grafana
    chartVersion: 9.0.6
  namespace: monitoring
  # grafana domain used as ingress
  domain: monitoring.{{ rootDomain }}
  # grafana admin username
  username: admin
  # grafana admin password
  password: ""
harbor:
  helm:
    repoUrl: https://charts.bitnami.com/bitnami
    repoName: bitnami
    chartRef: bitnami/harbor
    chartVersion: 16.7.4
  namespace: harbor
  # harbor domain used as ingress
  domain: registry.{{ rootDomain }}
  # harbor admin username
  username: admin
  # harbor admin password
  password: ""
  # harbor projects that will be created or updated
  projects:
    # - projectName: robots
    #   metadata:
    #     public: "true"
    #     storageLimit: -1
    #     autoScan: "true"
  # harbor robots that will be created or updated
  robots:
    # - name: docs
    #   description: Robot that build documentation
    #   level: system
    #   duration: -1
    #   permissions:
    #     - kind: project
    #       namespace: robots
    #       access:
    #         - action: list
    #           resource: repository
    #         - action: pull
    #           resource: repository
    #         - action: push
    #           resource: repository
    #         - action: delete
    #           resource: repository
    #         - action: read
    #           resource: artifact
    #         - action: list
    #           resource: artifact
    #         - action: delete
    #           resource: artifact
    #         - action: create
    #           resource: artifact-label
    #         - action: delete
    #           resource: artifact-label
    #         - action: create
    #           resource: tag
    #         - action: delete
    #           resource: tag
    #         - action: list
    #           resource: tag
    #         - action: create
    #           resource: scan
    #         - action: stop
    #           resource: scan
keycloak:
  helm:
    repoUrl: https://charts.bitnami.com/bitnami
    repoName: bitnami
    chartRef: bitnami/keycloak
    chartVersion: 15.1.8
  namespace: keycloak
  # keycloak domain used as ingress
  domain: sso.{{ rootDomain }}
  # keycloak admin username
  username: admin
  # keycloak admin password
  password: ""
  # keycloak default password for users
  defaultPassword: Password123!
  # keycloak realm used by the homelab sso system
  realm: homelab
  clientIds:
    # keycloak client id for argocd application
    argocd: argocd
    # keycloak client id for grafana application
    grafana: grafana
    # keycloak client id for harbor application
    harbor: harbor
    # keycloak client id for minio application
    minio: minio
    # keycloak client id for vault application
    vault: vault
kubePrometheus:
  helm:
    repoUrl: https://charts.bitnami.com/bitnami
    repoName: bitnami
    chartRef: bitnami/kube-prometheus
    chartVersion: 8.17.0
  namespace: monitoring
kubeDashboard:
  helm:
    repoUrl: https://kubernetes.github.io/dashboard
    repoName: kubernetes-dashboard
    chartRef: kubernetes-dashboard/kubernetes-dashboard
    chartVersion: 7.0.0-alpha0
  namespace: kubernetes-dashboard
  # kubernetes-dashboard domain used as ingress
  domain: console.{{ rootDomain }}
  # kubernetes-dashboard admin token
  token: ""
longhorn:
  helm:
    repoUrl: https://charts.longhorn.io
    repoName: longhorn
    chartRef: longhorn/longhorn
    chartVersion: 1.5.1
  namespace: longhorn-system
  # longhorn domain used as ingress
  domain: longhorn.{{ localRootDomain }}
  s3:
    enabled: false
    httpsEndpoint: ""
    s3Endpoint: ""
    accessKey: ""
    secretKey: ""
mattermost:
  helm:
    repoUrl: https://helm.mattermost.com
    repoName: mattermost
    chartRef: mattermost/mattermost-operator
    chartVersion: 0.3.5
  namespace: mattermost
  # mattermost domain used as ingress (web interface)
  domain: mattermost.{{ rootDomain }}
  # mattermost admin username
  username: admin
  # mattermost admin password
  password: ""
  postgres:
    admin:
      # mattermost database admin username
      username: admin
      # mattermost database admin password
      password: ""
    app:
      # mattermost database app username
      username: mattermost
      # mattermost database app password
      password: ""
  s3:
    # mattermost s3 bucket access key
    accessKey: ""
    # mattermost s3 bucket secret key
    secretKey: ""
minio:
  helm:
    repoUrl: https://charts.bitnami.com/bitnami
    repoName: bitnami
    chartRef: bitnami/minio
    chartVersion: 12.7.0
  namespace: minio
  # minio domain used as ingress (web interface)
  domain: s3.{{ rootDomain }}
  # minio domain used as ingress (api)
  apiDomain: api.s3.{{ rootDomain }}
  # minio admin username
  username: admin
  # minio admin password
  password: ""
test:
  namespace: test
  domain: test.{{ rootDomain }}
traefik:
  # traefik domain used as ingress
  domain: traefik.{{ localRootDomain }}
vault:
  helm:
    repoUrl: https://helm.releases.hashicorp.com
    repoName: hashicorp
    chartRef: hashicorp/vault
    chartVersion: 0.25.0
  namespace: vault
  # vault domain used as ingress
  domain: vault.{{ rootDomain }}
  # vault root access token
  token: ""
  # vault unseal keys
  unsealKey1: ""
  unsealKey2: ""
  unsealKey3: ""
