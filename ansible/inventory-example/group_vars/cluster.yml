---
#---------#
# cluster #
#---------#
k3s:
  # k3s version
  version: v1.27.4+k3s1
  # k3s_token is required for masters to talk together securely this token should be alpha numeric only
  token: ""
  # k3s CA data
  caData: ""
  # systemd directory
  systemdDir: /etc/systemd/system
  # interface which will be used for flannel
  flanneliface: eth0
  # apiServerEndpoint is haproxy loadbalancer ip-address which will be configured on each master
  apiServerEndpoint: "{{ hostvars[groups['gateway'][0]]['ansible_host'] }}"
  # master node ip address
  masterIP: "{{ hostvars[groups['masters'][0]]['ansible_host'] }}"
  # node ip address
  nodeIP: "{{ ansible_facts[k3s.flanneliface]['ipv4']['address'] }}"
  # extra args to pass to both master and worker nodes
  extraArgs: >-
    --node-name {{ inventory_hostname }} 
    --node-ip={{ k3s.nodeIP }} 
    --prefer-bundled-bin 
    --flannel-iface {{ k3s.flanneliface }}
  # extra args to pass to master nodes
  extraServerArgs: >-
    {{ k3s.extraArgs }} 
    --tls-san {{ k3s.apiServerEndpoint }} 
    --disable local-storage 
    --write-kubeconfig-mode 644 
    --node-label node-type=master
  # extra args to pass to worker nodes
  extraAgentArgs: >-
    {{ k3s.extraArgs }} 
    --node-label node-type=worker
  # extra args to pass if longhorn need to create disk (cf. inventory hosts)
  extraStorageArgs: ""
#----------#
# services #
#----------#
services:
  actionsRunnerController:
    helm:
      repoUrl: https://actions-runner-controller.github.io/actions-runner-controller
      repoName: actions-runner-controller
      chartRef: actions-runner-controller/actions-runner-controller
      chartVersion: 0.23.3
    namespace: actions-runner-system
    # Use 'githubToken' OR 'githubApp...'
    githubToken: ""
    # githubAppId: ""
    # githubAppInstallId: ""
    # githubAppKey: ""
    runners:
      # - name: docs-runner
      #   namespace: runners
      #   type: repository
      #   target: this-is-tobi/docs
      #   minRunners: 1
      #   maxRunners: 5
      # - name: tobi-runner
      #   namespace: runners
      #   type: organization
      #   target: this-is-tobi
      #   minRunners: 1
      #   maxRunners: 5
  argocd:
    helm:
      repoUrl: https://charts.bitnami.com/bitnami
      repoName: bitnami
      chartRef: bitnami/argo-cd
      chartVersion: 4.7.23
    namespace: argocd
    # argocd domain used as ingress
    domain: gitops.{{ root_domain }}
    # argocd admin username
    username: admin
    # argocd admin password
    password: ""
  certManager:
    helm:
      repoUrl: https://charts.jetstack.io
      repoName: jetstack
      chartRef: jetstack/cert-manager
      chartVersion: 1.12.3
    namespace: cert-manager
    # email used for letsencrypt
    email: your@email.com
  cloudNativePostgres:
    helm:
      repoUrl: https://cloudnative-pg.github.io/charts
      repoName: cnpg
      chartRef: cnpg/cloudnative-pg
      chartVersion: 0.18.2
    namespace: cnpg-system
  dashy:
    namespace: dashy
    image: docker.io/lissy93/dashy:2.1.1
    docsDomain: docs.this-is-tobi.com
  grafana:
    helm:
      repoUrl: https://charts.bitnami.com/bitnami
      repoName: bitnami
      chartRef: bitnami/grafana
      chartVersion: 9.0.6
    namespace: monitoring
    # grafana domain used as ingress
    domain: monitoring.{{ root_domain }}
    # grafana admin username
    username: admin
    # grafana admin password
    password: ""
  harbor:
    helm:
      repoUrl: https://charts.bitnami.com/bitnami
      repoName: bitnami
      chartRef: bitnami/harbor
      chartVersion: 16.7.4
    namespace: harbor
    # harbor domain used as ingress
    domain: registry.{{ root_domain }}
    # harbor admin username
    username: admin
    # harbor admin password
    password: ""
    # harbor projects that will be created or updated
    projects:
      # - projectName: robots
      #   metadata:
      #     public: "true"
      #     storageLimit: -1
      #     autoScan: "true"
    # harbor robots that will be created or updated
    robots:
      # - name: docs
      #   description: Robot that build documentation
      #   level: system
      #   duration: -1
      #   permissions:
      #     - kind: project
      #       namespace: robots
      #       access:
      #         - action: list
      #           resource: repository
      #         - action: pull
      #           resource: repository
      #         - action: push
      #           resource: repository
      #         - action: delete
      #           resource: repository
      #         - action: read
      #           resource: artifact
      #         - action: list
      #           resource: artifact
      #         - action: delete
      #           resource: artifact
      #         - action: create
      #           resource: artifact-label
      #         - action: delete
      #           resource: artifact-label
      #         - action: create
      #           resource: tag
      #         - action: delete
      #           resource: tag
      #         - action: list
      #           resource: tag
      #         - action: create
      #           resource: scan
      #         - action: stop
      #           resource: scan
  keycloak:
    helm:
      repoUrl: https://charts.bitnami.com/bitnami
      repoName: bitnami
      chartRef: bitnami/keycloak
      chartVersion: 15.1.8
    namespace: keycloak
    # keycloak domain used as ingress
    domain: sso.{{ root_domain }}
    # keycloak admin username
    username: admin
    # keycloak admin password
    password: ""
    # keycloak default password for users
    defaultPassword: Password123!
    # keycloak realm used by the homelab sso system
    realm: homelab
    clientIds:
      # keycloak client id for argocd application
      argocd: argocd
      # keycloak client id for grafana application
      grafana: grafana
      # keycloak client id for harbor application
      harbor: harbor
      # keycloak client id for minio application
      minio: minio
      # keycloak client id for vault application
      vault: vault
  kubePrometheus:
    helm:
      repoUrl: https://charts.bitnami.com/bitnami
      repoName: bitnami
      chartRef: bitnami/kube-prometheus
      chartVersion: 8.17.0
    namespace: monitoring
  kubeDashboard:
    helm:
      repoUrl: https://kubernetes.github.io/dashboard
      repoName: kubernetes-dashboard
      chartRef: kubernetes-dashboard/kubernetes-dashboard
      chartVersion: 7.0.0-alpha0
    namespace: kubernetes-dashboard
    # kubernetes-dashboard domain used as ingress
    domain: console.{{ root_domain }}
    # kubernetes-dashboard admin token
    token: ""
  longhorn:
    helm:
      repoUrl: https://charts.longhorn.io
      repoName: longhorn
      chartRef: longhorn/longhorn
      chartVersion: 1.5.1
    namespace: longhorn-system
    # longhorn domain used as ingress
    domain: longhorn.{{ local_root_domain }}
  mattermost:
    helm:
      repoUrl: https://helm.mattermost.com
      repoName: mattermost
      chartRef: mattermost/mattermost-operator
      chartVersion: 0.3.5
    namespace: mattermost
    # mattermost domain used as ingress (web interface)
    domain: mattermost.{{ root_domain }}
    # mattermost admin username
    username: admin
    # mattermost admin password
    password: ""
    postgres:
      admin:
        # mattermost database admin username
        username: admin
        # mattermost database admin password
        password: ""
      app:
        # mattermost database app username
        username: mattermost
        # mattermost database app password
        password: ""
    s3:
      # mattermost s3 bucket access key
      accessKey: ""
      # mattermost s3 bucket secret key
      secretKey: ""
  minio:
    helm:
      repoUrl: https://charts.bitnami.com/bitnami
      repoName: bitnami
      chartRef: bitnami/minio
      chartVersion: 12.7.0
    namespace: minio
    # minio domain used as ingress (web interface)
    domain: s3.{{ root_domain }}
    # minio domain used as ingress (api)
    apiDomain: api.s3.{{ root_domain }}
    # minio admin username
    username: admin
    # minio admin password
    password: ""
  test:
    namespace: test
    domain: test.{{ root_domain }}
  traefik:
    # traefik domain used as ingress
    domain: traefik.{{ local_root_domain }}
  vault:
    helm:
      repoUrl: https://helm.releases.hashicorp.com
      repoName: hashicorp
      chartRef: hashicorp/vault
      chartVersion: 0.25.0
    namespace: vault
    # vault domain used as ingress
    domain: vault.{{ root_domain }}
    # vault root access token
    token: ""
    # vault unseal keys
    unsealKey1: ""
    unsealKey2: ""
    unsealKey3: ""
